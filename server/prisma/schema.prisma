// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

// Список пользователей
model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("upadted_at")
  email String @unique
  name String
  password String
  role String
  games Games[]
  blunders Blunders[]
}

// Скачанные игры
model Games {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userID], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  userID Int
  gameID String
  speed String
  white String
  black String
  side String
  moves String
  winner String 
  isAnalyzed Boolean
  blunders Blunders[]
}

// Ошибки, найденные в партиях
model Blunders {
  id Int @id @default(autoincrement())
  from String   
  to String
  game Games @relation(fields: [gameId], references: [id])
  gameId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  loss Float
  counter Int
}

// База дебютной теории
model Theory {
  id Int @id @default(autoincrement())
  fen String @unique
  positionName String
  positionDescription String
  circles Json
  arrows Json
  fromContinuations theoreticalContinuations[] @relation("FromTheory")
  toContinuations theoreticalContinuations[] @relation("ToTheory")
  fromBlunders theoreticalBlunders[] @relation("FromBlunder")
  toBlunders theoreticalBlunders[] @relation("ToBlunder")
}

// Ход из базы дебютной теории, представляет собой две позиции, до и после совершения хода
model theoreticalContinuations {
  id Int @id @default(autoincrement())
  fromId Int
  toId Int
  move String
  from Theory @relation("FromTheory", fields: [fromId], references: [id])
  to Theory @relation("ToTheory", fields: [toId], references: [id])
}

// Аналог хода из базы, только хранит ошибку
model theoreticalBlunders {
  id Int @id @default(autoincrement())
  fromId Int
  toId   Int
  move String
  loss Float
  from Theory @relation("FromBlunder", fields: [fromId], references: [id])
  to Theory @relation("ToBlunder", fields: [toId], references: [id])
}